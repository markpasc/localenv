#!/usr/bin/env python

import os
from os.path import abspath, join, basename, exists
import subprocess
import sys


def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]

    path = abspath(argv[0])
    # local::lib makes the path if it doesn't exist.
    locallib_pipe = subprocess.Popen(['perl', '-Mlocal::lib=%s' % path], stdout=subprocess.PIPE, close_fds=True)
    locallib_script = locallib_pipe.communicate()[0]

    activate_script = """
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    if [ -n "$_OLD_LOCAL_PATH" ]; then
        PATH="$_OLD_LOCAL_PATH"
        export PATH
        unset _OLD_LOCAL_PATH
    fi

    if [ -n "$_OLD_LOCAL_PS1" ]; then
        PS1="$_OLD_LOCAL_PS1"
        export PS1
        unset _OLD_LOCAL_PS1
    fi

    """ + ''.join("""
    if [ ! "$1" = "nondestructive" ]; then
        %(var)s="$_OLD_LOCAL_%(var)s"
        export %(var)s
        unset _OLD_LOCAL_%(var)s
    fi
    """ % {'var': var}
        for var in
        ('MODULEBUILDRC', 'PERL_MM_OPT', 'PERL5LIB', 'PERL_CPANM_OPT')) + """

    if [ -n "$BASH" -o -n "$ZSH_VERSION" ]; then
        hash -r
    fi

    unset LOCAL_ENV
    if [ ! "$1" = "nondestructive" ]; then
        unset -f deactivate
    fi
}

# unset irrelevant variables
deactivate nondestructive

LOCAL_ENV="%(path)s"
export LOCAL_ENV

_OLD_LOCAL_PS1="$PS1"
PS1="(`basename \"$LOCAL_ENV\"`)$PS1"
export PS1

_OLD_LOCAL_PERL_CPANM_OPT="$PERL_CPANM_OPT"
PERL_CPANM_OPT="-l %(path)s"
export PERL_CPANM_OPT

_OLD_LOCAL_PATH="$PATH"
_OLD_LOCAL_MODULEBUILDRC="$MODULEBUILDRC"
_OLD_LOCAL_PERL_MM_OPT="$PERL_MM_OPT"
_OLD_LOCAL_PERL5LIB="$PERL5LIB"

%(locallib_script)s

if [ -n "$BASH" -o -n "$ZSH_VERSION" ]; then
    hash -r
fi

    """.strip() % {
        'path': path,
        'basename': basename(path),
        'locallib_script': locallib_script,
    }

    # local::lib didn't make sure we have a bin dir, though.
    bin_path = join(path, 'bin')
    if not exists(bin_path):
        os.makedirs(bin_path)

    with open(join(bin_path, 'activate'), 'w') as activate_file:
        print >>activate_file, activate_script

    return 0


if __name__ == '__main__':
    sys.exit(main())
